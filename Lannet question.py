# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LW8xsM5yk2OgWBaGkAVr5__l1yKa0-QT

Question : 1
"""

import pandas as pd 

df = pd.DataFrame({'DATE1': ['2020-07-15', '2020-07-16', '2020-07-17'], 
                   'DATE2': ['2020-02-20', '2020-02-21', '2020-07-23'],
                   'DATE3': ['2020-04-02', '2020-04-03', '2020-04-04']})
print('Before Join') 
print(df, '\n')


def my_function(DATE1,DATE2,DATE3):
    return(DATE1,DATE2,DATE3)

print('After join')
df['shubham'] = df['DATE1'].str.cat(df['DATE2'], sep =":")
df['Arpit'] = df['DATE2'].str.cat(df['DATE3'], sep =":")
df['Ankit'] = df['DATE3'].str.cat(df['DATE1'], sep =":")
print(df)

"""Question : 2 (i)"""

import numpy as np
import pandas as pd

d ={'name':['raman','jatin','divya','ayush','monika','shubham','ankit','sanjay','arpit','sumit'],
       'sal':[15,19,11,22,100,12,14,13,12,10]}

emp = pd.DataFrame(data=d)
#print(emp)

max_threshold = emp['sal'].quantile(0.95)
#print('max_threshold:',max_threshold )

max_outlier = emp[emp['sal']>max_threshold]
#print('max_outlier :',max_outlier)

min_threshold = emp['sal'].quantile(0.05)
#print('min_threshold:',min_threshold )

min_outlier = emp[emp['sal']<min_threshold]
#print('min_outlier :',min_outlier)


print(emp[(emp['sal']<max_threshold) & (emp['sal']>min_threshold)])

"""Question : 2 (ii)"""

import numpy as np
import pandas as pd
dataset= [10,12,12,13,12,11,14,13,15,10,10,10,100,12,14,13, 12,10, 10,11,12,15,12,13,12,11,14,13,15,10,15,12,10,14,13,15,10]
outliers=[]
def my_function(data):
    
    threshold=3
    mean = np.mean(data)
    std =np.std(data)
    
    
    for y in data:
        z= (y - mean)/std 
        if np.abs(z) > threshold:
            outliers.append(y)
    return outliers

outlier_data = my_function(dataset)
print(outlier_data)

Q1, Q3= np.percentile(dataset,[25,75])
IQR = Q3 - Q1
print(IQR)
lower_bound = Q1 -(1.5 * IQR)
print(lower_bound) 
upper_bound = Q3 +(1.5 * IQR)
print(upper_bound)

emp = pd.DataFrame(data=dataset)
print(emp)

max_threshold = emp.quantile(0.95)
print(max_threshold )

c = emp>max_threshold
print(c)

min_threshold = emp.quantile(0.05)
print(min_threshold)

d = emp<min_threshold
print(d)

print(emp[(emp<max_threshold) & (emp>min_threshold)])


#removing outlier

"""Question : 3 (i)"""

import pandas as pd
import numpy as np
a = {'sal':[3400, 5698, 6763, 9812, 5486, 1968],
     'age':[12, 14, 16, 18, 21, 23],
     'id':[9310, 1022, 26, 3938, 2596, 1039],
     'mark':[200, 183, 173, 197, 120, 143]}
emp = pd.DataFrame(data=a)
print(emp)
def myfunction():
     com = emp.corr().abs()
     print(com)

     upper = com.where(np.triu(np.ones(com.shape),k=1).astype(np.bool))
     print(upper)
     raw = [column for column in upper.columns if any(upper[column] > 0.85)]
     print(raw)

     df1 = emp.drop(emp[raw], axis=1)
     print(df1)

print(myfunction())

"""Question : 3 (ii)"""

import pandas as pd
import numpy as np
X = np.array([[1, 1, 1],
              [2, 2, 0],
              [3, 3, 1],
              [4, 4, 0],
              [5, 5, 1],
              [6, 6, 0],
              [7, 7, 1],
              [8, 7, 0],
              [9, 7, 1]])
emp = pd.DataFrame(X)
print(emp)

def myfunction():
  com = emp.corr().abs()
  print(com)

  upper = com.where(np.triu(np.ones(com.shape),k=1).astype(np.bool))
  print(upper)
  raw = [column for column in upper.columns if any(upper[column] > 0.85)]
  print(raw)

  df1 = emp.drop(emp[raw], axis=1)
  print(df1)

print(myfunction())